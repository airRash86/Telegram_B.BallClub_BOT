import sqlite3 as sq 
import telebot
from telebot import types
import os
import sys
import time

sys.path.insert(1, os.path.join(sys.path[0], '..')) #–î–∞–Ω–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ your_dir (—Å–ª–µ–¥. —Å—Ç—Ä.) —Ñ—É–Ω–∫-—é send
from your_dir import send

TOKEN = <your_TOKEN>

bot = telebot.TeleBot(TOKEN)
 
###https://t.me/rash_test_bot
###@Dorogomil-BASKET_BOT

#‚úÖ
#ü§ù
#‚ö†Ô∏è
#üèÄ
#‚ö°
#‚û°Ô∏è
#‚ÑπÔ∏è
#‚§µÔ∏è
#‚õî
#‚ùì
#‚Ü™Ô∏è
#‚≠ï
#üîç  



###---------Unsubscribe
@bot.message_handler(commands=['OTPISKA'])
def OTPISKA(message):
    with sq.connect('PATH_To_DB_and_nameDB')as con:
        cur = con.cursor()
        cur.execute(f"""SELECT id_TG, spec FROM Descrip_THEMSELF WHERE id_TG = {message.chat.id}""")
        check = cur.fetchone()
        print(check)
        if len(check[0]) == 2 and check[0][1] == 'allowed':
            BUTT_OTPISKA = types.InlineKeyboardMarkup()
            agree_OTPISKA = types.InlineKeyboardButton(text = "–î–∞", callback_data = f'AgreeNewUserOrDel-{message.chat.id}-OTPISKA')
            STAY_HERE_BUTT = types.InlineKeyboardButton(text = "–ù–µ—Ç", callback_data = 'back')
            BUTT_OTPISKA.add(agree_OTPISKA, STAY_HERE_BUTT)
            bot.send_message(message.chat.id, f'''‚ùì–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤–æ—Å—Ç—è—Ö –≤ –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–±–∞—Å–∫–µ—Ç?
''', reply_markup=BUTT_OTPISKA)
### --------END Unsubscribe

###---–í–∑—è—Ç–∏–µ –Ω–æ–º–µ—Ä–∞
@bot.message_handler(commands=['number'])
def phone(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = types.KeyboardButton(text='üìû–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º',request_contact=True)
    keyboard.add(button_phone)
    msg_phone = bot.send_message(message.chat.id, '''–ß—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
"üìû–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º" –Ω–∏–∂–µ ‚§µÔ∏è

‚ùó–í—Ä—É—á–Ω—É—é —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–æ–º–µ—Ä –≤–≤–æ–¥–∏—Ç—å –ù–ï –Ω—É–∂–Ω–æ!''', reply_markup=keyboard)
    bot.register_next_step_handler(msg_phone, contact) 
##---–ø–µ—Ä–µ—Ö–≤–∞—Ç –∏ –≤—ã–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ 
@bot.message_handler(content_types=['contact'])
def contact(message):
    keyboard = types.ReplyKeyboardRemove()
    if message.contact is not None:
        mess = message.contact.phone_number
        T_mess = f'–ù–æ–º–µ—Ä:  {mess}  - —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É'
        bot.send_message(message.chat.id, T_mess, reply_markup=keyboard)
        print(message.contact.phone_number) 
        add_Phone_Num(message, mess)
    elif message.text == '/menu':
        geophone(message)
    else:
        bot.send_message(message.chat.id, '''‚ö†Ô∏è–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! –î–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–æ–º–µ—Ä–∞ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∏–∂–µ
–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ‚û°Ô∏è/menu –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,
–Ω–æ —Ç–æ–≥–¥–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∞!''', reply_markup=keyboard)
        phone(message)
        

@bot.message_handler(commands=['menu', 'start'])
def geophone(message):
    # –≠—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã, –ø—Ä–æ—Å—Ç–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_1 = types.KeyboardButton(text= "üèÄ–ù–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç") 
    button_2 = types.KeyboardButton(text="üì∏–§–æ—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –∑–∞–ª–∞") 
    button_3 = types.KeyboardButton(text="‚öôÔ∏è–ó–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")
    keyboard.add(button_1,  button_2, button_3)
    msg_For_START_chaT=bot.send_message(message.chat.id, """ü§ù–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω–æ–π —Å–µ–∫—Ü–∏–∏

‚û°Ô∏è–ï—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ –∑–∞–Ω–∏–º–∞–ª–∏—Å—å –≤ –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç (–î–ë), —Ç–æ
–Ω–∞–∂–º–∏—Ç–µ "–ù–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç"

‚û°–ï—Å–ª–∏ –∂–µ –≤—ã —É–∂–µ —Ç—Ä–µ–Ω–∏—Ä—É–µ—Ç–µ—Å—å –≤ –î–ë, —Ç–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ "–ù–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç",
—Ç–∞–∫ –≤–∞—à–∏ –∑–∞–Ω—è—Ç–∏—è –≤ —Å–µ–∫—Ü–∏–∏ —Å—Ç–∞–Ω—É—Ç –µ—â–µ —É–¥–æ–±–Ω–µ–µ!""", reply_markup=keyboard)
##    bot.register_next_step_handler(msg_For_START_chaT, ansWRE_To_START_chaT, keyboard) # –≤–æ–∑–º–æ–∂–Ω–æ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ NEXT_STEP


##---–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö
@bot.message_handler(content_types=['text']) 
def default_test(message):
    if message.text == "üèÄ–ù–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç":
        keyboard = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ!', reply_markup=keyboard)
        CHECK_id_TG = check_id_TG(message.chat.id)
        if CHECK_id_TG == None:
            Hi_To_new_member(message) 
        elif CHECK_id_TG == False:    
            G_C_Mes = Global_Check(message)
            if G_C_Mes == 2:
                bot.send_message(message.chat.id, '‚ÑπÔ∏è–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞!', reply_markup=keyboard)
                phone(message)
            elif G_C_Mes == 3:
                priVET_non_STOP(message)
    elif message.text == "‚öôÔ∏è–ó–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É":
        keyboard = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É - –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –Ω–∏–∂–µ!', reply_markup=keyboard)
        suppORT(message)
    elif message.text == "üì∏–§–æ—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –∑–∞–ª–∞":
        keyboard = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ!', reply_markup=keyboard)
        BUTT = types.InlineKeyboardMarkup()
        FOTO_gym = types.InlineKeyboardButton(text = "üì∏–ó–∞–ª-1", callback_data = 'FOTO_gym')
        FOTO_gym_2 = types.InlineKeyboardButton(text = "üì∏–ó–∞–ª-2", callback_data = 'FOTO_gym_2')
        FOTO_balls = types.InlineKeyboardButton(text = "üì∏–ú—è—á–∏", callback_data = 'FOTO_balls')
        FOTO_shower = types.InlineKeyboardButton(text = "üì∏–î—É—à", callback_data = 'FOTO_shower')
        FOTO_TOILET = types.InlineKeyboardButton(text = "üì∏–¢—É–∞–ª–µ—Ç", callback_data = 'FOTO_TOILET')
        FOTO_dress_room = types.InlineKeyboardButton(text = "üì∏–†–∞–∑–¥–µ–≤–∞–ª–∫–∞", callback_data = 'FOTO_dress_room')
        FOTO_Table_Tennis = types.InlineKeyboardButton(text = "üì∏–ù–∞—Å—Ç. –¢–µ–Ω–Ω–∏—Å", callback_data = 'FOTO_Table_Tennis')
        BACK = types.InlineKeyboardButton(text ="‚Ü©Ô∏è–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data = 'back') 
        BUTT.add(FOTO_gym, FOTO_gym_2, FOTO_balls, FOTO_shower, FOTO_TOILET, FOTO_dress_room, FOTO_Table_Tennis, BACK)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ', reply_markup=BUTT)
###---–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –¥—Ä—É–≥–∏–º –±–æ—Ç–æ–º (–Ω–æ–≤—ã–π –ø–æ—Å—Ç –≤–∫)
    elif message.chat.id == TG_id_admin and '''üèÄ–î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç.
–ë—É–¥—å –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π!

–ù–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ —Ç–µ–º—É:''' in message.text:
        rassilka(message.text)
###---END –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –¥—Ä—É–≥–∏–º –±–æ—Ç–æ–º (–Ω–æ–≤—ã–π –ø–æ—Å—Ç –≤–∫)
    else:
        abc=types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!', reply_markup=abc)
        bot.send_message(message.from_user.id, f'''‚ö†Ô∏è"{message.text}" - –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
–ù–∞–∂–º–∏—Ç–µ /menu –∏ –≤—ã–±–∏—Ä–µ—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é''')
        try:
            bot.edit_message_reply_markup(message.chat.id, message_id = message.message_id-1, reply_markup = '')
        except:
            print('–ó–∞—Ç–æ –±–µ–∑ –æ—à–∏–±–∫–∏)))')
####---END –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö 


def suppORT(message):
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    url_button = types.InlineKeyboardButton(text="üü¶–ù–∞–ø–∏—Å–∞—Ç—å –≤ VK!", url="https://vk.com/admin")
    url_button_1 = types.InlineKeyboardButton(text="üü¢–ù–∞–ø–∏—Å–∞—Ç—å –≤ WHATS App!", url="https://api.whatsapp.com/send?phone=adminPHONEnum")
    url_button_2 = types.InlineKeyboardButton(text="üîµ–ù–∞–ø–∏—Å–∞—Ç—å –≤ TG!", url="https://t.me/adminNICKname")
    url_button_3 = types.InlineKeyboardButton(text="‚Ü©Ô∏è–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data = 'back')
    keyboard.add(url_button, url_button_1, url_button_2, url_button_3)
    bot.send_message(message.chat.id, "üì°–°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:", reply_markup=keyboard)


###---FOTO
def FOTO_1_2_3_4_5(call, arg):
    ###—Ü–∏–∫–ª–æ–º —Ñ–æ—Ä --- BUTT.add –∏–∑ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤—Ç–æ—Ä—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —Å—Ç—Ä–æ–∫—É call.data   
    BUTT = types.InlineKeyboardMarkup(row_width=3)
    FOTO_gym = types.InlineKeyboardButton(text = "üì∏–ó–∞–ª-I", callback_data = 'FOTO_gym')
    FOTO_gym_2 = types.InlineKeyboardButton(text = "üì∏–ó–∞–ª-2", callback_data = 'FOTO_gym_2')
    FOTO_balls = types.InlineKeyboardButton(text = "üì∏–ú—è—á–∏", callback_data = 'FOTO_balls')
    FOTO_shower = types.InlineKeyboardButton(text = "üì∏–î—É—à", callback_data = 'FOTO_shower')
    FOTO_TOILET = types.InlineKeyboardButton(text = "üì∏–¢—É–∞–ª–µ—Ç", callback_data = 'FOTO_TOILET')
    FOTO_dress_room = types.InlineKeyboardButton(text = "üì∏–†–∞–∑–¥–µ–≤–∞–ª–∫–∞", callback_data = 'FOTO_dress_room')
    FOTO_Table_Tennis = types.InlineKeyboardButton(text = "üì∏–ù–∞—Å—Ç.–¢–µ–Ω–Ω–∏—Å", callback_data = 'FOTO_Table_Tennis')
    BACK = types.InlineKeyboardButton(text ="‚Ü©Ô∏è–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data = 'back')
    supply = [FOTO_gym, FOTO_gym_2, FOTO_balls, FOTO_shower, FOTO_TOILET, FOTO_dress_room, FOTO_Table_Tennis, BACK]
    For_save = []
    for i in supply:
        if i.callback_data != arg:
            For_save.append(i)
    saved = tuple(For_save)
    BUTT.add(*saved)
    bot.send_message(call.message.chat.id, '–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ –¥—Ä—É–≥–∏–µ —Ñ–æ—Ç–æ‚§µ', reply_markup=BUTT)
###---END FOTO

###---–≠—Ç–∞ —Å–µ–∫—Ü–∏—è –¥–ª—è –æ–±—â–µ–≥–æ ping`–∞ –≤—Å–µ—Ö —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –±–æ—Ç–æ–≤
@bot.channel_post_handler()
def hello(message):
    if message.chat.id == -1001856957974  and 'TOTAL' in message.text:
        send("–ü–µ—Ä–≤—ã–π (Dorogomil-Bas) 1960073417 ‚úÖONLINE", TOKEN)
        # bot.reply_to(message, "‚úÖ–í—Ç–æ—Ä–æ–πAFTERdel_5288033405_ONLINE")
###---END –≠—Ç–∞ —Å–µ–∫—Ü–∏—è –¥–ª—è –æ–±—â–µ–≥–æ ping`–∞ –≤—Å–µ—Ö —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –±–æ—Ç–æ–≤
    
###---–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ id_TG –≤ –ë–î
def check_id_TG(b):
    with sq.connect('PATH_To_DB_and_nameDB')as con:
            cur = con.cursor()
            cur.execute(f"""SELECT id_TG FROM Descrip_THEMSELF WHERE Descrip_THEMSELF.id_TG = {b}""")
            check = cur.fetchone()
            if check == None:
                return None
            else:
                return False
###---END –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ id_TG –≤ –ë–î

###---–ù–∞—á–∞–ª—å–Ω—ã–π –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Global_Check(message)
def Global_Check(message):
    with sq.connect('PATH_To_DB_and_nameDB')as con:
        cur = con.cursor()
        cur.execute(f"""SELECT Name_secName, Temporary_descrip, phone_number FROM Descrip_THEMSELF WHERE Descrip_THEMSELF.id_TG = {message.chat.id}""")
        check_Global = cur.fetchone()
    if len(check_Global[0])!=0 and len(check_Global[1])==0 and len(str(check_Global[2]))==0:
        print(check_Global[0], '—ç—Ç–æ 1 (Name_secName, —Ç.–µ. –≤–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ)')
        add_discr(message)
    elif len(check_Global[0])!=0 and len(check_Global[1])!=0 and len(str(check_Global[2]))==0:
        print(check_Global[1], '—ç—Ç–æ 2 (TempDiscr, —Ç.–µ. –≤–≤–µ–¥–∏ —Ç–µ–ª–µ–æ—Ñ–Ω)')
        return 2
    elif len(check_Global[0])!=0 and len(check_Global[1])!=0 and len(str(check_Global[2]))!=0:
        print(f'–ü—Ä–∏–≤–µ—Ç, {check_Global[0]}! –ù–µ –±—Ä–æ—Å–∞–π –±–∞—Å–∫–µ—Ç–±–æ–ª!')
        return 3
###---END –ù–∞—á–∞–ª—å–Ω—ã–π –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Global_Check(message)

### --- –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
def Hi_To_new_member(message): 
    msg_name = bot.send_message(message.chat.id, f'''‚òùÔ∏è–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –∏, –≤–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ)

üí°–ï—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!
–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?

‚Ñπ–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–∞ –∏ –Ω—É–∂–Ω–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–º–∏ –≤ —á–∏—Å–ª–µ –ø–µ—Ä–≤—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö
–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –≤ –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç.

‚û°Ô∏è–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.''') 
    bot.register_next_step_handler(msg_name,FIKS_name)  
### --- END –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤


###---–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º
def rassilka(TEXT):
    with sq.connect('PATH_To_DB_and_nameDB')as con:
        cur = con.cursor()
        cur.execute(f"""SELECT id_TG FROM Descrip_THEMSELF WHERE spec = 'allowed'""")
        ids = cur.fetchall()
    TEXT+= """

–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏: –Ω–∞–∂–º–∏—Ç–µ /OTPISKA"""
    rassilka_GO(TEXT, ids)
    
def rassilka_GO(TEXT, ids):
    print('rassilka_GO')
    try:
        for i in ids:
            try:
                print(i[0])                    
                bot.send_message(i[0], TEXT)
            except:
                pass
                print('error: ', i)
    except:
        pass            
###---END –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º
    
######------IF DESCR IS FULL
def priVET_non_STOP(message):
    with sq.connect('PATH_To_DB_and_nameDB')as con:
        cur = con.cursor()
        cur.execute(f"""SELECT Name_secName FROM Descrip_THEMSELF WHERE Descrip_THEMSELF.id_TG = {message.chat.id}""")
        check = cur.fetchone()
        
        bot.send_message(message.chat.id, f'''‚ÑπÔ∏è–ò—Å—Ö–æ–¥—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞, –≤–∞—Å –∑–æ–≤—É—Ç:    {check[0]},
–ï—Å–ª–∏ —ç—Ç–æ –≤–µ—Ä–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ –±–∞—Å–∫–µ—Ç–±–æ–ªüèÄ! 

–ï—Å–ª–∏ –∂–µ –Ω—É–∂–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–∏–≤—ã, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ ‚û°Ô∏è/menu,
–∞ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
‚öô–ó–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É  ''')
######------END IF DESCR IS FULL

###---- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ 
def FIKS_name(message):
    BUTT_hi = types.InlineKeyboardMarkup()
    y_name = types.InlineKeyboardButton(text = "‚úÖ–î–∞", callback_data = 'yes_name')
    n_name = types.InlineKeyboardButton(text = "üñäÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å", callback_data = 'change')
    buT_back = types.InlineKeyboardButton(text = "‚Ü©Ô∏è–ì–ª–∞–≤. –º–µ–Ω—é", callback_data = 'back')
    BUTT_hi.add(y_name, n_name, buT_back)
    bot.send_message(message.chat.id, f'''–í–∞—Å –∑–æ–≤—É—Ç:   {message.text}
–í–µ—Ä–Ω–æ?''', reply_markup=BUTT_hi)
#----- END –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

##---–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline –∫–Ω–æ–ø–∫–∏ 
@bot.callback_query_handler(func = lambda call: True)
def ans(call):
    if call.data == 'FOTO_gym':
        img = open('/PATH/–∑–∞–ª1.jpg', 'rb')
        bot.send_photo(call.message.chat.id,  img)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–§–æ—Ç–æ –∏–≥—Ä–æ–≤–æ–≥–æ –∑–∞–ª–∞') #—É–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ã
        FOTO_1_2_3_4_5(call, call.data)
    elif call.data == 'FOTO_gym_2':
        img_2 = open('/PATH/–∑–∞–ª2.jpg', 'rb')
        bot.send_photo(call.message.chat.id,  img_2)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–§–æ—Ç–æ')
        FOTO_1_2_3_4_5(call, call.data)
    elif call.data == 'FOTO_balls':
        img_3 = open('/PATH/–º—è—á–∏.jpg', 'rb')
        bot.send_photo(call.message.chat.id,  img_3)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–°–Ω–∞—Ä—è–¥—ã')
        FOTO_1_2_3_4_5(call, call.data)
    elif call.data == 'FOTO_shower':
        img_4 = open('/PATH/–¥—É—à.jpg', 'rb')
        bot.send_photo(call.message.chat.id,  img_4)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–§–æ—Ç–æ –¥—É—à–µ–≤–æ–π')
        FOTO_1_2_3_4_5(call, call.data)
    elif call.data == 'FOTO_TOILET':
        img_5 = open('/PATH/—Ç—É–∞–ª–µ—Ç.jpg', 'rb')
        bot.send_photo(call.message.chat.id,  img_5)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–§–æ—Ç–æ —Ç—É–∞–ª–µ—Ç–∞')
        FOTO_1_2_3_4_5(call, call.data)
    elif call.data == 'FOTO_dress_room':
        img_6 = open('/PATH/—Ä–∞–∑–¥–µ–≤–∞–ª–∫–∞.jpg', 'rb')
        bot.send_photo(call.message.chat.id,  img_6)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–§–æ—Ç–æ —Ä–∞–∑–¥–µ–≤–∞–ª–∫–∏')
        FOTO_1_2_3_4_5(call, call.data)
    elif call.data == 'FOTO_Table_Tennis':
        img_7 = open('/PATH/—Ç–µ–Ω–Ω–∏—Å.jpg', 'rb')
        bot.send_photo(call.message.chat.id,  img_7)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–í –ø–µ—Ä–µ—Ä—ã–≤–µ –º–æ–∂–Ω–æ –ø–æ–∏–≥—Ä–∞—Ç—å –∏ –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–π –¢–µ–Ω–Ω–∏—Å!')
        FOTO_1_2_3_4_5(call, call.data) 
    elif call.data == 'back':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚Ü©Ô∏è–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!')
        geophone(call.message)
    elif call.data == 'yes_name':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚úÖ–°—É–ø–µ—Ä!')
        c_m_id = call.message.chat.id
        T_m = call.message.text
        if '–í–∞—Å –∑–æ–≤—É—Ç: ' in T_m:
            T_m = T_m.replace('–í–∞—Å –∑–æ–≤—É—Ç: ', '')
            if '–í–µ—Ä–Ω–æ?' in T_m:
                T_m = T_m.replace('–í–µ—Ä–Ω–æ?', '')
                T_m = T_m.strip()
        with sq.connect('PATH_To_DB_and_nameDB')as con:
            cur = con.cursor()
            cur.execute(f"INSERT INTO Descrip_THEMSELF VALUES (?, ?, ?, ?, ?, ?)", (c_m_id, T_m, '', '', '', ''))
            print('–ó–∞—Ä–µ–≥–∞–Ω–æ!')
            add_discr(call.message)
    elif call.data == 'change':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–æ–∫!')
        Hi_To_new_member(call.message)
    elif call.data == 'no chang':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚è≥–°–µ–∫—É–Ω–¥–æ—á–∫—É...', reply_markup=None)      
        if '‚û°–í—ã –æ–ø–∏—Å–∞–ª–∏ —Å–µ–±—è —Ç–∞–∫:' in call.message.text:
            call.message.text = call.message.text.replace('‚û°–í—ã –æ–ø–∏—Å–∞–ª–∏ —Å–µ–±—è —Ç–∞–∫:', '')
            if '–í–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–Ω–µ—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏–≤—ã?' in call.message.text:
                call.message.text = call.message.text.replace('–í–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–Ω–µ—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏–≤—ã?', '')
                if '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ!' in call.message.text: 
                    call.message.text = call.message.text.replace('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ!', '') 
        else:
            pass
        V_V = check_id_TG(call.message.chat.id) #---–æ—Ç—Å–±–¥–∞ –±–ª–æ–∫ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –æ–ø–∏—Å–∞–Ω–∏—è –≤ –ë–î
        if V_V == False:
            C_D_T = check_Temporary_descrip(call.message.chat.id)
            if C_D_T == None:
                with sq.connect('PATH_To_DB_and_nameDB')as con:
                    cur = con.cursor()
                    cur.execute(f"""UPDATE Descrip_THEMSELF SET Temporary_descrip = '{call.message.text.strip()}' WHERE
id_TG = {call.message.chat.id}""")
                bot.send_message(call.message.chat.id, '''üí•–û—Ç–ª–∏—á–Ω–æ! –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ)

–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–∞–ª–µ–µ.
‚òéÔ∏è–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ –Ω–∏–∫–∞–∫–æ–≥–æ —Å–ø–∞–º–∞)''')
                phone(call.message)
            else:
                print(f'–í–∞—à–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {C_D_T}')
        elif V_V == None:
            print('HE IS NOT IN DATE BASE!') #---END –æ—Ç—Å–±–¥–∞ –±–ª–æ–∫ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –æ–ø–∏—Å–∞–Ω–∏—è –≤ –ë–î
    elif call.data == 'pravka':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–©–∞!')
        add_discr(call.message)
    elif 'AgreeNewUserOrDel' in call.data:
        LST_in_add_or_del = call.data.split('-')
        with sq.connect('PATH_To_DB_and_nameDB')as con:
            cur = con.cursor()
            if len(LST_in_add_or_del) == 2:
                cur.execute(f"""UPDATE Descrip_THEMSELF SET spec = 'allowed' WHERE
id_TG = {LST_in_add_or_del[1]}""")
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚úÖ–ù–æ–≤—ã–π —é–∑–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞—Å—Å—ã–ª–∫—É')
            elif len(LST_in_add_or_del) == 3:
                cur.execute(f"""UPDATE Descrip_THEMSELF SET spec = ' ' WHERE
id_TG = {LST_in_add_or_del[1]}""")
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚≠ï–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–µ–∫—Ä–∞—â–µ–Ω—ã')
    elif call.data == 'FAULT_NewUser_In_mailing':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='‚õî–û—Ç–∫–∞–∑ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ –≤ —Ä–∞—Å—Å—ã–ª–∫—É')
        
    bot.answer_callback_query(callback_query_id=call.id) #—ç—Ç–æ —á—Ç–æ–±—ã –∏–∫–æ–Ω–∫–∞ —á–∞—Å–æ–≤ –Ω–µ –≤–∏—Å–µ–ª–∞ –Ω–∞ –∫–Ω–æ–ø–∫–µ 
###---END –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline –∫–Ω–æ–ø–∫–∏

###---–ó–∞–Ω–µ—Å–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑—É
def add_Phone_Num(message, arg):
    with sq.connect('PATH_To_DB_and_nameDB')as con:
        cur = con.cursor()
        cur.execute(f"""UPDATE Descrip_THEMSELF SET phone_number = '{arg}' WHERE
id_TG = {message.chat.id}""")
    Finishing(message)
    
def Finishing(message):
    BUTT_Fin = types.InlineKeyboardMarkup()
    m_BUTT = types.InlineKeyboardButton(text = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data = 'back')
    BUTT_Fin.add(m_BUTT)
    bot.send_message(message.chat.id, '''‚úÖ–ù–∞ —ç—Ç–æ–º –≤—Å—ë!
–¢–µ–ø–µ—Ä—å –∫–ª—É–± üèÄ–î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç —Å—Ç–∞–ª –µ—â–µ –±–ª–∏–∂–µ
–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ –ë–∞—Å–∫–µ—Ç–±–æ–ª, –∞ –æ—Ç —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏–Ω–æ–≥–¥–∞ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
–æ–± –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –ö–ª—É–±–∞!
–ï—Å–ª–∏ –æ–Ω–∏ –ø–æ–∫–∞–∂—É—Ç—Å—è –≤–∞–º –Ω–∞–≤—è–∑—á–∏–≤—ã–º–∏, —Ç–æ –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è)

–ê —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –≥–ª—è–Ω—É—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–º —Ñ–æ—Ç–∫–∏,
–¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"‚§µÔ∏è
  
ü§ù–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç!''', reply_markup=BUTT_Fin)
    print(message.chat.id)
    alarm_New_Member(message)

####----- –û–±—Ä–∞–±–æ—Ç–∫–∞ add New user
def alarm_New_Member(message):
    with sq.connect('PATH_To_DB_and_nameDB')as con:
        cur = con.cursor()
        cur.execute(f"""SELECT * FROM Descrip_THEMSELF WHERE id_TG = {message.chat.id}""")
        check = cur.fetchone()
    BUTT_alarm = types.InlineKeyboardMarkup()
    agree_BUTT = types.InlineKeyboardButton(text = "‚úÖAdd", callback_data = f'AgreeNewUserOrDel-{message.chat.id}')
    FAULT_BUTT = types.InlineKeyboardButton(text = "‚õîFAULT", callback_data = 'FAULT_NewUser_In_mailing')
    url_WApp_BUTT = types.InlineKeyboardButton(text="‚Ü™Ô∏èW.App NewUser !", url=f"https://api.whatsapp.com/send?phone={check[3]}")
    BUTT_alarm.add(agree_BUTT, FAULT_BUTT, url_WApp_BUTT)
    bot.send_message(416735064, f'''‚úÖAdded new user
‚û°Ô∏èTG id: {check[0]}
‚û°Ô∏èname: {check[1]}
‚û°Ô∏èdesck: {check[2]}
‚û°Ô∏èphone: {check[3]}

‚ùì–î–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ —Ä–∞—Å—Å—ã–ª–∫—É –∏–∑ –í–ö?
''', reply_markup=BUTT_alarm)
####-----END –û–±—Ä–∞–±–æ—Ç–∫–∞ add New user
    
    
###---–ë–ª–æ–∫ –∑–∞–ø—Ä–æ—Å–∞ –∏ –≤–Ω–µ—Å–µ–Ω–∏—è –≤ –ë–î –æ–ø–∏—Å–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ 
@bot.message_handler(commands=['add_discr']) 
def add_discr(message):
    knop = types.ReplyKeyboardMarkup(resize_keyboard=True)
    knop.add(types.KeyboardButton('‚úÖ–î–∞'), types.KeyboardButton('‚õî–ù–µ—Ç')) 
    msg_For_chaT = bot.send_message(message.chat.id, """‚û°Ô∏è–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç
–≤–∞–º –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ. –°–æ–≤—Å–µ–º –Ω–µ —Å–ª–æ–∂–Ω–æ. –°–¥–µ–ª–∞–µ—Ç–µ —ç—Ç–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ?""", reply_markup=knop)
    bot.register_next_step_handler(msg_For_chaT, ansWRE_To_TG)

def ansWRE_To_TG(message):   #–≤–Ω–∏–º–∞–Ω–∏–µ –∫ bot.send_message, –∞ –Ω–µ —Ö–µ–Ω–¥–ª–µ—Ä
    knop = types.ReplyKeyboardRemove()
    if message.text == '‚úÖ–î–∞':
        msg = bot.send_message(message.chat.id, '''‚úèÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –æ —Å–µ–±–µ:
- ‚ùì–í–∞—à —Ä–æ—Å—Ç, –≤–æ–∑—Ä–∞—Å—Ç
- ‚ùì–ó–∞–Ω–∏–º–∞–ª–∏—Å—å –ª–∏ –±–∞—Å–∫–µ—Ç–±–æ–ª–æ–º? –ï—Å–ª–∏ –¥–∞, —Ç–æ –≥–¥–µ (–∫–ª—É–±, —Å–µ–∫—Ü–∏—è, —É–ª–∏—Ü–∞) –∏ –∫–∞–∫ –¥–æ–ª–≥–æ?
- ‚ùì–ö–∞–∫–æ–π —Å–µ–π—á–∞—Å —Ä–æ–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (—É—á–µ–±–∞/—Ä–∞–±–æ—Ç–∞)? –ö–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏–ª–∏ —Ä–∞–±–æ—Ç—ã?
‚ÑπÔ∏è–ü–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–≤ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ, –Ω–æ –≤–∞–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏,
–∞ –Ω–µ —Ä–∞–∑–±–∏–≤–∞—Ç—å —Ä–∞—Å—Å–∫–∞–∑ –æ —Å–µ–±–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—à–µ–Ω–∏–π.
‚ö°–ü—Ä–∏—Å—Ç—É–ø–∞–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!''', reply_markup=knop)
        bot.register_next_step_handler(msg, add_To_DB)
    elif message.text == '‚õî–ù–µ—Ç':
        bot.send_message(message.chat.id, '''–ù–µ—Ç, —Ç–∞–∫ –Ω–µ—Ç...''', reply_markup=knop)
        bot.send_message(message.chat.id, '‚Ü©Ô∏è–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')        
        geophone(message)
    elif message.text == '/menu':
        bot.send_message(message.from_user.id, f'''‚Ü©Ô∏è–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é''', reply_markup=knop)
        geophone(message)
    else:
        knop = types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, f'''‚ö†Ô∏è"{message.text}" - –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /menu –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é''', reply_markup=knop)
        beTWEEn(message)
        
def beTWEEn(message):
    bot.send_message(message.from_user.id, '‚è≥–°–µ–∫—É–Ω–¥–æ—á–∫—É...')
    add_discr(message)
    

def add_To_DB(message):
    a = message.text
    b = message.chat.id
    markup = types.InlineKeyboardMarkup() 
    switch_button = types.InlineKeyboardButton(text='üñäÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å',   callback_data = 'pravka')
    switch_button_1 = types.InlineKeyboardButton(text='‚úÖ–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π', callback_data = 'no chang')
    markup.add(switch_button_1, switch_button)
    bot.send_message(message.chat.id, f"""‚û°–í—ã –æ–ø–∏—Å–∞–ª–∏ —Å–µ–±—è —Ç–∞–∫:

{a}

–í–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–Ω–µ—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏–≤—ã?
–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ!""", reply_markup = markup)
###---END –ë–ª–æ–∫ –∑–∞–ø—Ä–æ—Å–∞ –∏ –≤–Ω–µ—Å–µ–Ω–∏—è –≤ –ë–î –æ–ø–∏—Å–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ 


###---–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Temporary_descrip, –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ id_TG –≤ –ë–î
def check_Temporary_descrip(b):
    with sq.connect('PATH_To_DB_and_nameDB')as con:
            cur = con.cursor()
            cur.execute(f"""SELECT Temporary_descrip FROM Descrip_THEMSELF WHERE id_TG = {b}""")
            check = cur.fetchone()
            if len(check[0]) == 0:
                return None
            else:
                return len(check[0])
###---END –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Temporary_descrip, –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ id_TG –≤ –ë–î

# print('–ë–û–¢ –°–¢–ê–†–¢–ê–ù–£–õ')
# bot.polling()

while True:
    try:
        print('–ë–û–¢ –î–æ—Ä–æ–≥–æ–º–∏–ª–æ–≤–æ-–ë–∞—Å–∫–µ—Ç –°–¢–ê–†–¢–ê–ù–£–õ')
        bot.polling(none_stop=True, timeout=123)
    except:
        time.sleep(5)
        continue









